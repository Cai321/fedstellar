scenario_args:
  name: ""
  federation: DFL
  simulation: true
  controller: "127.0.0.1:5000"
  random_seed: 0
  config_version: "development"
  debug: true

device_args:
  uid: ""
  idx: ""
  username: "pi"
  password: "pi"
  role: "aggregator"
  start: false
  using_gpu: true
  gpu_id: 0

geo_args:
  latitude: "46.762520"
  longitude: "7.600490"

network_args:
  ip: ""
  ipdemo: ""
  port: ""
  neighbors: ""
  interface: "eth0"
  rate: "1Mbps"
  loss: "0.1%"
  delay: "100ms"
  delay-distro: 0

data_args:
  dataset: MNIST
  dataset_dir: data/MNIST
  partition_method: noniid
  partition_alpha: 0.5 # Not available yet

model_args:
  model: MLP

aggregator_args:
  algorithm: "FedAvg"

validation_args:
  frequency_of_the_test: 5

tracking_args:
  enable_tracking: false
  enable_wandb: false
  wandb_key: [your wandb key]
  wandb_entity: enriquetomasmb
  wandb_project: framework-enrique

mender_args:
  id: ""
  mac: ""
  device_type: ""


BLOCK_SIZE: 2048
# Max amount of bytes to read from the buffer at a time.

NODE_TIMEOUT: 20
# Timeout (seconds) for a node to be considered dead.

VOTE_TIMEOUT: 60
# Timeout (seconds) for a node to wait for a vote.

AGGREGATION_TIMEOUT: 60
# Timeout (seconds) for a node to wait for other models. Timeout starts when the first model is added.

HEARTBEAT_PERIOD: 4
# Period (seconds) for the node to send a heartbeat.

HEARTBEATER_REFRESH_NEIGHBORS_BY_PERIOD: 4
# Times by period to refresh the neighbors list.

WAIT_HEARTBEATS_CONVERGENCE: 10
# Time (seconds) to wait for the heartbeats to converge.

TRAIN_SET_SIZE: 10
# Size of the training set.

TRAIN_SET_CONNECT_TIMEOUT: 5
# Timeout (seconds) to wait for a node to connect to the training set.

AMOUNT_LAST_MESSAGES_SAVED: 100
# Amount of last messages saved. Used to avoid gossiping cycles.

GOSSIP_MESSAGES_FREC: 100
# Frequency of gossiping messages (times by second).

GOSSIP_MESSAGES_PER_ROUND: 100
# Amount of gossip messages per round.

GOSSIP_EXIT_ON_X_EQUAL_ROUNDS: 20
# Amount of equal rounds to exit gossiping. Careful, a low value can cause an early stop of gossiping.

GOSSIP_MODELS_FREC: 1
# Frequency of gossiping models (times by second).

GOSSIP_MODELS_PER_ROUND: 2
# Amount of gossip models per round.